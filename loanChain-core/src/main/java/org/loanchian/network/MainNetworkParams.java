package org.loanchian.network;

import org.loanchian.Configure;
import org.loanchian.crypto.Sha256Hash;
import org.loanchian.message.DefaultMessageSerializer;
import org.loanchian.message.MessageSerializer;
import org.loanchian.store.BlockStore;
import org.loanchian.utils.Hex;
import org.loanchian.utils.Utils;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.InetSocketAddress;

/**
 * 主网各参数
 * @author ln
 *
 */
public class MainNetworkParams extends NetworkParams {

	private static MainNetworkParams instance;

	public static synchronized MainNetworkParams get() {
		if (instance == null) {
			instance = new MainNetworkParams();
		}
		return instance;
	}

	public MainNetworkParams() {

		this.seedManager = new RemoteSeedManager();

		seedManager.add(new Seed(new InetSocketAddress("192.168.1.3", Configure.PORT))); // yy
		seedManager.add(new Seed(new InetSocketAddress("192.168.1.6", Configure.PORT))); // cj
//		seedManager.add(new Seed(new InetSocketAddress("192.168.1.3", Configure.PORT)));
//		seedManager.add(new Seed(new InetSocketAddress("116.62.135.185", Configure.PORT)));
//		seedManager.add(new Seed(new InetSocketAddress("116.62.117.200", Configure.PORT)));
//		seedManager.add(new Seed(new InetSocketAddress("47.92.4.19", Configure.PORT)));
//		seedManager.add(new Seed(new InetSocketAddress("47.92.26.16", Configure.PORT)));

		init();
	}

	public MainNetworkParams(SeedManager seedManager, int port) {
		this.seedManager = seedManager;
		this.port = port;

		init();
	}

	private void init() {
		this.packetMagic = 86061588l;
		this.acceptableAddressCodes = new int[] {getSystemAccountVersion(), getCertAccountVersion()};
	}

	@Override
	public int getProtocolVersionNum(ProtocolVersion version) {
		return version.getVersion();
	}

	@Override
	public MessageSerializer getSerializer(boolean parseRetain) {
		return new DefaultMessageSerializer(this);
	}

	/**
	 * 创建创世快
	 * @return BlockStore
	 */
	@Override
	public BlockStore getGengsisBlock() {

		BlockStore gengsisBlock = new BlockStore(this, Hex.decode("000000000000000000000000000000000000000000000000000000000000000000000000ede633545ed47be1ea52bc95b06e9e51dd5ee17f5480ed4a6845a87fdaaa8e3d63e0305a00000000000063e0305a822102883a9625a871e79c070e316edafc97eac2f6c97b218d0e55726f25be2a963e9276a9144237cccf6ff9a7674a8fc47c60278fdd23e9f3098846304402203cf8bdac57fab1ecee0882985435f503d00241c2887629689031d82e607cf175022045827d7d5036c5bee60870aca53e41c331ca9a6f8d1daac6f180b709aee228deac090101000000010012117468697320612067656e6773697320747800000000010080faca73f91f00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688ac63e0305a00000000000201000000010121d4c902ddef8e812bc872916896b00dbfce04ce9c95d007996f7c1217e75802000000006b483045022100820034c0f3f77e8955a1fcb46a698e84e1474401f46d5974d7d359f2e364b1ea022014afdc619044a66fe46bf75a7a10258aec84b260698c3b96c42bf2ada53fe11601210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020080c6a47e8d03000078c2481976a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988ac00003426f56b1c00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688ac63e0305a0000000000060100000063e0305a832102883a9625a871e79c070e316edafc97eac2f6c97b218d0e55726f25be2a963e9276a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988473045022100fcc2b1397fe1f25f3c7e4333e9ed9f0d2ec80fe79e1edbd1fe0b753f914a448802205199efe65a0b9a3ad1331da4e188747895338e579e67dd04fff9ea3accfdfc8fac4237cccf6ff9a7674a8fc47c60278fdd23e9f309010000000000000000000000000000000000000000000000000000000000000000000000000000000000020100000001015927f9b249e9ed0e869b83f3917dfe26e41d655752b798ef3097c1e31f7bc14d010000006b483045022100f3cd225877748d53a6b6cf436aef1adaa44fb6628d22e49d91d7a4416b9437e402206f70ed99fde46fa0382ebe6e0724f2f58a20177be6472f4211a2a0c090c84dea01210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020010a5d4e8000000000000001976a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988ac00f08e510c6b1c00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688ac63e0305a00000000000301000000000063e0305a0000000000822102883a9625a871e79c070e316edafc97eac2f6c97b218d0e55726f25be2a963e9276a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988463044022007c7ede1785c168707e2e7b42e6a39c0ee914bc3647e4c638236dc81d41b8854022017e7e20ce7fd1cd1bc700b036b10f0afddd20f6565f7a68987ccbfa9bbe5e947acd981ec4e4237cccf6ff9a7674a8fc47c60278fdd23e9f309060100000063e0305a822103a7db4a854e3f2ae3a30aa759bfd39045f6a80c967b3fd81036acebc54b557ece76a9142c1179b1e05fb8652644f6c61a033d2843100912884630440220774fcedecc454fcecdd065860f6886ea648a452e3663e87ec489eb966e80571f022042e462d4db217e0453469265ca4198ace6ae61aa7c27b4a3ee3c832ec43b2039ac2c1179b1e05fb8652644f6c61a033d2843100912010000000000000000000000000000000000000000000000000000000000000000000000000000000000020100000001011e6ee88a0faca5661e3089178c23b8adc1f9fbb28a6e7d1ebddf2202754b7822010000006b483045022100e4a82e61577eac8e8cd8eea44f1842de76198c4ceba1eda5cafed11e71a6be6802201a1ee3e4e2c3ff12fe6b5d2ff7a636232455d792aca7c6aa87f9592db936864501210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020010a5d4e8000000000000001976a9142c1179b1e05fb8652644f6c61a033d284310091288ac00e0e97c236a1c00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688ac63e0305a00000000000301000000000063e0305a0000000000832103a7db4a854e3f2ae3a30aa759bfd39045f6a80c967b3fd81036acebc54b557ece76a9142c1179b1e05fb8652644f6c61a033d28431009128847304502210090e3e1822287b17c24aea66d5638832af4c8b0d282b6194c9a209207219658c7022059050cde4abaf7faf4bf8d50df8376de859d85f1bbedc6c1f5b89af109b80dbbacdf81ec4e2c1179b1e05fb8652644f6c61a033d28431009120b0100000043da7e5982c220256303b7fa1e89761bf37c1a8415524dbcb9ec1b4033ce71d4224699e8459235c314dd1c14ee4f4642eb9c3e14cc97a3c3d3629708ea88473045022100c50a56f6bb25ea2ade3b83def48d7b55401916f711a634a8b2163b555343cef502203cda9a0c6735c72cf4599def1eaec90f32206e69ded301be46168aa2ad0286aaacdd1c14ee4f4642eb9c3e14cc97a3c3d3629708eadd1c14ee4f4642eb9c3e14cc97a3c3d3629708ea01fd23022b046e616d6506e5908de7a7b01ee9878de5ba86e58db0e993bee7a791e68a80e69c89e99990e585ace58fb822076164647265737306e59cb0e59d8012e9878de5ba86e5b882e58d97e5b2b8e58cba44046c6f676f06e59bbee7898737687474703a2f2f66696c652e696e636861696e2e6f72672f696d616765732f696e636861696e5f6c6f676f5f313030783130302e706e672b0a637265646974436f64650ce4bfa1e794a8e4bba3e7a0811239313530303130384d41355542333248334e1a0570686f6e6506e794b5e8af9d0c3032332d383633333130363927077765627369746506e5ae98e7bd911768747470733a2f2f7777772e696e636861696e2e6f7267fd1d0108646573637269707406e68f8fe8bfb0fd0a01e9878de5ba86e58db0e993bee7a791e68a80e69c89e99990e585ace58fb8e698afe4b880e5aeb6e4bba5e58cbae59d97e993bee68a80e69cafe9a9b1e58aa8e79a84e5889be696b0e59e8be4bc81e4b89aefbc8ce585b6e4b8bbe5afbce79a84e58cbae59d97e993bee7a4bee58cbae9a1b9e79bae496e636861696e2de58db0e993bee698afe4b880e4b8aae4bba5e998b2e4bcaae4b8bae59fbae7a180e4b89ae58aa1e79a84e585ace5bc80e5b9b3e58fb0efbc8ce4b8bae7a4bee4bc9ae59084e4bc81e4b89ae38081e69cbae69e84e38081e889bae69cafe5aeb6e7ad89e68f90e4be9be59381e7898ce38081e79fa5e8af86e4baa7e69d83e4bf9de68aa4e69c8de58aa1e380820221023cbfda1ae93a41187634206177a0482ee2c890540bd907a7f6fbdde9e5a31c3b2103489e3933f41327c2463b664776a4355860cf5b093c106d21f0253f83dda76465012103df243c24dfe4ea420c776e8d46fbc2a86c6e439648119f64b583a38a0c7d84fd00"));
		Sha256Hash merkleHash = gengsisBlock.getBlock().buildMerkleHash();

		if(log.isDebugEnabled()) {
			log.debug("创世块的哈希 : {}", merkleHash);
		}

		Utils.checkState("ede633545ed47be1ea52bc95b06e9e51dd5ee17f5480ed4a6845a87fdaaa8e3d".equals(Hex.encode(merkleHash.getBytes())), "the gengsis block merkle hash is error");

		if(log.isDebugEnabled()) {
			log.debug("创世块的哈希键KEY : {}", gengsisBlock.getBlock().getHash());
		}

		Utils.checkState("f57e138799e2c4b5d42af3c98d324609a9a31e2efc339fcc7177faeb2c2f8af0".equals(Hex.encode(gengsisBlock.getBlock().getHash().getBytes())), "the gengsis block hash is error");

		return gengsisBlock;
	}

	/**
	 * 获取该网络的认证管理账号的hash160
	 * @return byte[]
	 */
	@Override
	public byte[] getCommunityManagerHash160() {

		return Hex.decode("48d883f777d63b3db0b89a864363c0dc90a27a71");
	}

	/**
	 * 主网普通地址以o开头
	 * return
	 */
	@Override
	public int getSystemAccountVersion() {
		return 111;
	}

	/**
	 * 主网，认证地址以A开头
	 * return
	 */
	@Override
	public int getCertAccountVersion() {
		return 65;
	}

}
