package org.loanchian.network;

import org.loanchian.Configure;
import org.loanchian.crypto.Sha256Hash;
import org.loanchian.message.DefaultMessageSerializer;
import org.loanchian.message.MessageSerializer;
import org.loanchian.store.BlockStore;
import org.loanchian.utils.Hex;
import org.loanchian.utils.Utils;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.InetSocketAddress;

/**
 * 主网各参数
 * @author ln
 *
 */
public class MainNetworkParams extends NetworkParams {

	private static MainNetworkParams instance;

	public static synchronized MainNetworkParams get() {
		if (instance == null) {
			instance = new MainNetworkParams();
		}
		return instance;
	}

	public MainNetworkParams() {

		this.seedManager = new RemoteSeedManager();

		seedManager.add(new Seed(new InetSocketAddress("192.168.1.3", Configure.PORT))); // yy
		seedManager.add(new Seed(new InetSocketAddress("192.168.1.6", Configure.PORT))); // cj
//		seedManager.add(new Seed(new InetSocketAddress("192.168.1.3", Configure.PORT)));
//		seedManager.add(new Seed(new InetSocketAddress("116.62.135.185", Configure.PORT)));
//		seedManager.add(new Seed(new InetSocketAddress("116.62.117.200", Configure.PORT)));
//		seedManager.add(new Seed(new InetSocketAddress("47.92.4.19", Configure.PORT)));
//		seedManager.add(new Seed(new InetSocketAddress("47.92.26.16", Configure.PORT)));

		init();
	}

	public MainNetworkParams(SeedManager seedManager, int port) {
		this.seedManager = seedManager;
		this.port = port;

		init();
	}

	private void init() {
		this.packetMagic = 86061588l;
		this.acceptableAddressCodes = new int[] {getSystemAccountVersion(), getCertAccountVersion()};
	}

	@Override
	public int getProtocolVersionNum(ProtocolVersion version) {
		return version.getVersion();
	}

	@Override
	public MessageSerializer getSerializer(boolean parseRetain) {
		return new DefaultMessageSerializer(this);
	}

	/**
	 * 创建创世快
	 * @return BlockStore
	 */
	@Override
	public BlockStore getGengsisBlock() {

		BlockStore gengsisBlock = new BlockStore(this, Hex.decode("0000000000000000000000000000000000000000000000000000000000000000000000002610b1ad0ee1373158e8b0bb15d007d3734a3091131c131fcddcef782551752563e2305a00000000000063e2305a822102883a9625a871e79c070e316edafc97eac2f6c97b218d0e55726f25be2a963e9276a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988463044022002de34c31aecbeff2353840bf718257c651fdb8f7b7f5abf9c0b44801b60d06002206a06beb0fd1abbef5179b53044751b036783e80e263157cf8fdfff797c467637ac090101000000010012117468697320612067656e6773697320747800000000010080faca73f91f00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688ac63e2305a00000000000201000000010110ce74ae6224dd259841a9c0f0105757fc3b028857387f356f3ded8343dec713000000006b483045022100c65e3cd486f99b6ce4123b69cfe556bc595b2e07f1b1c2d6debc7f4981e8819e022050df34eb6fb67f43ac633cc042d502cfc75320d029abcbcdc7c631723677b26a01210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020080c6a47e8d03000078c2481976a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988ac00003426f56b1c00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688ac63e2305a0000000000060100000063e2305a832102883a9625a871e79c070e316edafc97eac2f6c97b218d0e55726f25be2a963e9276a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988473045022100e1ef3cefd83ece3e40fbc67bc6b7ff87c1244c04df84abe53098ad6396f961410220133cb4e807ee78dfab2cb480821fa502f380b0eab92768ca8ca836c3077c3d88ac4237cccf6ff9a7674a8fc47c60278fdd23e9f30901000000000000000000000000000000000000000000000000000000000000000000000000000000000002010000000101097a4fc5d6adf87fbff66d9836a0a1a26003fae6ba0b3340bc0772a61746bc70010000006a473044022002e29293fefbf419a269bfa8b6d666eb658a83f5d4e26bfd9c6726346650514702202f82069f05a1398ce21cd39bb6fb0d7db84ab55ee8154f92820f3be0fac1908101210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020010a5d4e8000000000000001976a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988ac00f08e510c6b1c00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688ac63e2305a00000000000301000000000063e2305a0000000000832102883a9625a871e79c070e316edafc97eac2f6c97b218d0e55726f25be2a963e9276a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988473045022100a1e11e35d83d843dbe33dad074040a4d7c9322856c427d0dfcc1c4e7f8ec9ab002200159468df0cd6de2885167c18a94078bcb54e7e79d72f526e623af82c44a8a19ac2550f44e4237cccf6ff9a7674a8fc47c60278fdd23e9f309060100000063e2305a822103a7db4a854e3f2ae3a30aa759bfd39045f6a80c967b3fd81036acebc54b557ece76a9142c1179b1e05fb8652644f6c61a033d28431009128846304402201ab89775621fd6c94da699fbd208ce24fdb3ec039192972b7e56d886b90001ff02207072ae65749e82731f57c310d30ff63e205fc5c2d923ee3fc19c43c3a1dad292ac2c1179b1e05fb8652644f6c61a033d28431009120100000000000000000000000000000000000000000000000000000000000000000000000000000000000201000000010188c64c6d684da8b0ad535628e81511bc28cf8d7691aed77d776415bd779bccc5010000006b483045022100d76d7b4115b919062bc05f12ad80ced39f7a5d12db81f4d61d2e23c38ef5fa0f02201d1f9b7ff85e51598469f52d1acac66803242a07cfc4426b21075287ea106cca01210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff020010a5d4e8000000000000001976a9142c1179b1e05fb8652644f6c61a033d284310091288ac00e0e97c236a1c00000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688ac63e2305a00000000000301000000000063e2305a0000000000832103a7db4a854e3f2ae3a30aa759bfd39045f6a80c967b3fd81036acebc54b557ece76a9142c1179b1e05fb8652644f6c61a033d284310091288473045022100a3f0f66ae6973a901a43742402d96d5cf668dfabc859ced56f87f41f16e89392022025be99a55c23c0cf826135ad50c0c35fb5997c082afd944d0cf0895b5d05ee63ac2c50f44e2c1179b1e05fb8652644f6c61a033d28431009120b0100000043da7e5982c220256303b7fa1e89761bf37c1a8415524dbcb9ec1b4033ce71d4224699e8459235c314dd1c14ee4f4642eb9c3e14cc97a3c3d3629708ea88473045022100c50a56f6bb25ea2ade3b83def48d7b55401916f711a634a8b2163b555343cef502203cda9a0c6735c72cf4599def1eaec90f32206e69ded301be46168aa2ad0286aaacdd1c14ee4f4642eb9c3e14cc97a3c3d3629708eadd1c14ee4f4642eb9c3e14cc97a3c3d3629708ea01fd23022b046e616d6506e5908de7a7b01ee9878de5ba86e58db0e993bee7a791e68a80e69c89e99990e585ace58fb822076164647265737306e59cb0e59d8012e9878de5ba86e5b882e58d97e5b2b8e58cba44046c6f676f06e59bbee7898737687474703a2f2f66696c652e696e636861696e2e6f72672f696d616765732f696e636861696e5f6c6f676f5f313030783130302e706e672b0a637265646974436f64650ce4bfa1e794a8e4bba3e7a0811239313530303130384d41355542333248334e1a0570686f6e6506e794b5e8af9d0c3032332d383633333130363927077765627369746506e5ae98e7bd911768747470733a2f2f7777772e696e636861696e2e6f7267fd1d0108646573637269707406e68f8fe8bfb0fd0a01e9878de5ba86e58db0e993bee7a791e68a80e69c89e99990e585ace58fb8e698afe4b880e5aeb6e4bba5e58cbae59d97e993bee68a80e69cafe9a9b1e58aa8e79a84e5889be696b0e59e8be4bc81e4b89aefbc8ce585b6e4b8bbe5afbce79a84e58cbae59d97e993bee7a4bee58cbae9a1b9e79bae496e636861696e2de58db0e993bee698afe4b880e4b8aae4bba5e998b2e4bcaae4b8bae59fbae7a180e4b89ae58aa1e79a84e585ace5bc80e5b9b3e58fb0efbc8ce4b8bae7a4bee4bc9ae59084e4bc81e4b89ae38081e69cbae69e84e38081e889bae69cafe5aeb6e7ad89e68f90e4be9be59381e7898ce38081e79fa5e8af86e4baa7e69d83e4bf9de68aa4e69c8de58aa1e380820221023cbfda1ae93a41187634206177a0482ee2c890540bd907a7f6fbdde9e5a31c3b2103489e3933f41327c2463b664776a4355860cf5b093c106d21f0253f83dda76465012103df243c24dfe4ea420c776e8d46fbc2a86c6e439648119f64b583a38a0c7d84fd00"));
		Sha256Hash merkleHash = gengsisBlock.getBlock().buildMerkleHash();

		if(log.isDebugEnabled()) {
			log.debug("创世块的哈希 : {}", merkleHash);
		}

		Utils.checkState("2610b1ad0ee1373158e8b0bb15d007d3734a3091131c131fcddcef7825517525".equals(Hex.encode(merkleHash.getBytes())), "the gengsis block merkle hash is error");

		if(log.isDebugEnabled()) {
			log.debug("创世块的哈希键KEY : {}", gengsisBlock.getBlock().getHash());
		}

		Utils.checkState("7bc951aeaaf9713137d8bdcd2b168f298734b9898c678f298d494661bb7ebd3d".equals(Hex.encode(gengsisBlock.getBlock().getHash().getBytes())), "the gengsis block hash is error");

		return gengsisBlock;
	}

	/**
	 * 获取该网络的认证管理账号的hash160
	 * @return byte[]
	 */
	@Override
	public byte[] getCommunityManagerHash160() {

		return Hex.decode("48d883f777d63b3db0b89a864363c0dc90a27a71");
	}

	/**
	 * 主网普通地址以o开头
	 * return
	 */
	@Override
	public int getSystemAccountVersion() {
		return 111;
	}

	/**
	 * 主网，认证地址以A开头
	 * return
	 */
	@Override
	public int getCertAccountVersion() {
		return 65;
	}

}
